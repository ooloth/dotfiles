{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(awk :*)",
      "Bash(basename :*)",
      "Bash(black :*)",
      "Bash(black --check :*)",
      "Bash(black --diff :*)",
      "Bash(cat :*)",
      "Bash(cat -n :*)",
      "Bash(cd :* && :*)",
      "Bash(cd :*)",
      "Bash(clang :*)",
      "Bash(clang -c :*)",
      "Bash(clang -o :*)",
      "Bash(clang -Wall :*)",
      "Bash(clisp -x :*)",
      "Bash(clisp:*)",
      "Bash(cp :*)",
      "Bash(cp -a :*)",
      "Bash(cp -p :*)",
      "Bash(cp -r :*)",
      "Bash(ctags :*)",
      "Bash(ctags -R :*)",
      "Bash(curl :* | grep:*)",
      "Bash(curl :* | head:*)",
      "Bash(curl :* | jq:*)",
      "Bash(curl :* | tail:*)",
      "Bash(curl :*)",
      "Bash(curl --data :*)",
      "Bash(curl --data-binary :*)",
      "Bash(curl --header :*)",
      "Bash(curl --include :*)",
      "Bash(curl --insecure :*)",
      "Bash(curl --request :*)",
      "Bash(curl --user :*)",
      "Bash(curl --verbose :*)",
      "Bash(curl --write-out :*)",
      "Bash(curl -d :*)",
      "Bash(curl -f :*)",
      "Bash(curl -H ':*' :*)",
      "Bash(curl -H \":*\" :*)",
      "Bash(curl -i :*)",
      "Bash(curl -k :*)",
      "Bash(curl -L :*)",
      "Bash(curl -o :*)",
      "Bash(curl -O :*)",
      "Bash(curl -s :*)",
      "Bash(curl -S :*)",
      "Bash(curl -u :*)",
      "Bash(curl -v :*)",
      "Bash(curl -w :*)",
      "Bash(curl -X DELETE :*)",
      "Bash(curl -X GET :*)",
      "Bash(curl -X PATCH :*)",
      "Bash(curl -X POST :*)",
      "Bash(curl -X PUT :*)",
      "Bash(cut :*)",
      "Bash(diff :*)",
      "Bash(dirname :*)",
      "Bash(echo :*)",
      "Bash(egrep :*)",
      "Bash(elisp :*)",
      "Bash(emacs :*)",
      "Bash(emacsclient :*)",
      "Bash(eslint :*)",
      "Bash(etags :*)",
      "Bash(exit 0:*)",
      "Bash(exit 1:*)",
      "Bash(false:*)",
      "Bash(fgrep :*)",
      "Bash(find :*)",
      "Bash(find . -name :*)",
      "Bash(find . -path :*)",
      "Bash(find . -type :*)",
      "Bash(flake8 :*)",
      "Bash(gcc :*)",
      "Bash(gcc -c :*)",
      "Bash(gcc -g :*)",
      "Bash(gcc -o :*)",
      "Bash(gcc -O2 :*)",
      "Bash(gcc -Wall :*)",
      "Bash(gdb :*)",
      "Bash(gdb -q :*)",
      "Bash(gh issue list :*)",
      "Bash(git add :*)",
      "Bash(git add -A:*)",
      "Bash(git add -u:*)",
      "Bash(git add .:*)",
      "Bash(git blame :*)",
      "Bash(git branch -a:*)",
      "Bash(git branch -d :*)",
      "Bash(git branch -D :*)",
      "Bash(git branch:*)",
      "Bash(git checkout :*)",
      "Bash(git checkout -b :*)",
      "Bash(git clean :*)",
      "Bash(git clone :*)",
      "Bash(git commit --amend:*)",
      "Bash(git commit -am :*)",
      "Bash(git commit -m :*)",
      "Bash(git config :*)",
      "Bash(git diff --staged:*)",
      "Bash(git diff HEAD:*)",
      "Bash(git diff:*)",
      "Bash(git fetch --all:*)",
      "Bash(git fetch:*)",
      "Bash(git init:*)",
      "Bash(git log --graph:*)",
      "Bash(git log --oneline:*)",
      "Bash(git log:*)",
      "Bash(git merge :*)",
      "Bash(git merge-base HEAD origin/main)",
      "Bash(git merge-base HEAD origin/master)",
      "Bash(git merge-base HEAD origin/trunk)",
      "Bash(git pull origin :*)",
      "Bash(git pull:*)",
      "Bash(git push -u origin :*)",
      "Bash(git push origin :*)",
      "Bash(git push:*)",
      "Bash(git rebase :*)",
      "Bash(git remote :*)",
      "Bash(git remote -v:*)",
      "Bash(git remote add :*)",
      "Bash(git remote set-url :*)",
      "Bash(git reset :*)",
      "Bash(git restore :*)",
      "Bash(git rev-parse HEAD)",
      "Bash(git show :*)",
      "Bash(git stash list:*)",
      "Bash(git stash pop:*)",
      "Bash(git stash:*)",
      "Bash(git status:*)",
      "Bash(git tag :*)",
      "Bash(grep :*)",
      "Bash(grep -A:* -B:* :*)",
      "Bash(grep -E :*)",
      "Bash(grep -i :*)",
      "Bash(grep -n :*)",
      "Bash(grep -r :*)",
      "Bash(grep -v :*)",
      "Bash(head :*)",
      "Bash(head -:*)",
      "Bash(head -n :*)",
      "Bash(info :*)",
      "Bash(jq :*)",
      "Bash(jq --tab:*)",
      "Bash(jq -c :*)",
      "Bash(jq -r :*)",
      "Bash(jq -s :*)",
      "Bash(jq .:*)",
      "Bash(jshint :*)",
      "Bash(less :*)",
      "Bash(ll:*)",
      "Bash(ls -a:*)",
      "Bash(ls -l:*)",
      "Bash(ls -la :*)",
      "Bash(ls -la:*)",
      "Bash(ls -lh:*)",
      "Bash(ls:*)",
      "Bash(make -j :*)",
      "Bash(make -n :*)",
      "Bash(make all:*)",
      "Bash(make clean:*)",
      "Bash(make install:*)",
      "Bash(make test:*)",
      "Bash(make:*)",
      "Bash(man :*)",
      "Bash(mkdir :*)",
      "Bash(mkdir -p :*)",
      "Bash(more :*)",
      "Bash(mv :*)",
      "Bash(mypy :*)",
      "Bash(node :*)",
      "Bash(node -e :*)",
      "Bash(npm list:*)",
      "Bash(npm run :*)",
      "Bash(npm test:*)",
      "Bash(npx :*)",
      "Bash(popd:*)",
      "Bash(printf :*)",
      "Bash(pushd :*)",
      "Bash(pwd:*)",
      "Bash(pydoc :*)",
      "Bash(pydoc3 :*)",
      "Bash(pylint :*)",
      "Bash(pytest :*)",
      "Bash(pytest -s :*)",
      "Bash(pytest -v :*)",
      "Bash(pytest -vv :*)",
      "Bash(pytest -x :*)",
      "Bash(python :*)",
      "Bash(python -c :*)",
      "Bash(python -m :*)",
      "Bash(python -m pytest :*)",
      "Bash(python -m unittest :*)",
      "Bash(python3 :*)",
      "Bash(python3 -c :*)",
      "Bash(python3 -m :*)",
      "Bash(python3 -m pytest :*)",
      "Bash(python3 -m unittest :*)",
      "Bash(readlink :*)",
      "Bash(realpath :*)",
      "Bash(rm :*)",
      "Bash(rm -r :*)",
      "Bash(ruff :*)",
      "Bash(sbcl --eval :*)",
      "Bash(sbcl --script :*)",
      "Bash(sbcl:*)",
      "Bash(sed :*)",
      "Bash(sed -e :*)",
      "Bash(sed -i :*)",
      "Bash(sed -n :*)",
      "Bash(sort :*)",
      "Bash(tail :*)",
      "Bash(tail -:*)",
      "Bash(tail -f :*)",
      "Bash(tail -n :*)",
      "Bash(test :*)",
      "Bash(touch :*)",
      "Bash(tree :*)",
      "Bash(true:*)",
      "Bash(type :*)",
      "Bash(uniq :*)",
      "Bash(valgrind :*)",
      "Bash(valgrind --leak-check=full :*)",
      "Bash(wc :*)",
      "Bash(wc -l :*)",
      "Bash(whereis :*)",
      "Bash(which :*)",
      "Bash(yq :*)",
      "Bash(yq -i :*)",
      "Bash(yq eval :*)",
      "Agent(**)",
      "Edit(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",
      "MultiEdit(**)",
      "Read(**)",
      "TodoRead(**)",
      "TodoWrite(**)",
      "WebSearch",
      "Write(**)"
    ],
    "deny": [
      "Bash(:* | base64 -d | bash:*)",
      "Bash(:* | base64 -d | sh:*)",
      "Bash(:* | nc -l:*)",
      "Bash(:* | netcat -l:*)",
      "Bash(:* | socat :*)",
      "Bash(:*bitcoin:*)",
      "Bash(:*bitcoin-cli:*)",
      "Bash(:*ethereum:*)",
      "Bash(:*fork:*bomb:*)",
      "Bash(:*miner:*)",
      "Bash(:*monero:*)",
      "Bash(:*privatekey:*)",
      "Bash(:*wallet.dat:*)",
      "Bash(:*xmrig:*)",
      "Bash(> /dev/nvme:*)",
      "Bash(> /dev/sd:*)",
      "Bash(> /dev/sda:*)",
      "Bash(> /var/log/:*)",
      "Bash(bash -i >& /dev/tcp/:*)",
      "Bash(cat /dev/urandom > :*)",
      "Bash(chmod -R 777 /:*)",
      "Bash(chmod 777 /bin/:*)",
      "Bash(chmod 777 /etc/:*)",
      "Bash(chmod 777 /usr/:*)",
      "Bash(chown -R :* /:*)",
      "Bash(curl :* | bash:*)",
      "Bash(curl :* | sh:*)",
      "Bash(curl :* | sudo :*)",
      "Bash(curl -s :* | sh:*)",
      "Bash(curl http://169.254.169.254/:*)",
      "Bash(curl http://metadata.google.internal/:*)",
      "Bash(dd if=/dev/random of=/dev/:*)",
      "Bash(dd if=/dev/zero of=/dev/:*)",
      "Bash(echo > /var/log/:*)",
      "Bash(env | base64:*)",
      "Bash(exec 3<>/dev/tcp/:*)",
      "Bash(exec < /dev/tcp/:*)",
      "Bash(exec > /dev/tcp/:*)",
      "Bash(export LD_LIBRARY_PATH=:*)",
      "Bash(export PATH=:*)",
      "Bash(export PYTHONPATH=:*)",
      "Bash(fdisk:*)",
      "Bash(find / -name :*.key:*)",
      "Bash(find / -name :*.pem:*)",
      "Bash(find / -name id_rsa:*)",
      "Bash(find / -type d -delete:*)",
      "Bash(find / -type f -delete:*)",
      "Bash(gdb -p :*)",
      "Bash(gem install :* --no-user-install:*)",
      "Bash(git push --force origin main:*)",
      "Bash(git push --force origin master:*)",
      "Bash(git push -f origin main:*)",
      "Bash(git push -f origin master:*)",
      "Bash(git reset --hard origin/main:*)",
      "Bash(git reset --hard origin/master:*)",
      "Bash(grep -r password /etc/:*)",
      "Bash(grep -r token /etc/:*)",
      "Bash(halt:*)",
      "Bash(history | grep -i key:*)",
      "Bash(history | grep -i password:*)",
      "Bash(history | grep -i secret:*)",
      "Bash(history | grep -i token:*)",
      "Bash(init 0:*)",
      "Bash(init 6:*)",
      "Bash(insmod :*)",
      "Bash(LD_PRELOAD=:*)",
      "Bash(masscan:*)",
      "Bash(mkfs:*)",
      "Bash(modprobe :*)",
      "Bash(nc -l:*)",
      "Bash(netcat -l:*)",
      "Bash(nmap:*)",
      "Bash(npm install -g :* --unsafe-perm:*)",
      "Bash(parted:*)",
      "Bash(passwd:*)",
      "Bash(pip install :* --break-system-packages:*)",
      "Bash(poweroff:*)",
      "Bash(printenv | base64:*)",
      "Bash(ptrace :*)",
      "Bash(reboot:*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /:*)",
      "Bash(rm -rf /home/:*)",
      "Bash(rm -rf /opt/:*)",
      "Bash(rm -rf /var/:*)",
      "Bash(rm -rf /var/log/:*)",
      "Bash(rm /var/log/:*)",
      "Bash(rmmod :*)",
      "Bash(ruby -rsocket:*)",
      "Bash(set | base64:*)",
      "Bash(sh -i >& /dev/tcp/:*)",
      "Bash(shutdown:*)",
      "Bash(socat:*)",
      "Bash(sudo :*)",
      "Bash(sudo > /etc/:*)",
      "Bash(sudo adduser:*)",
      "Bash(sudo chmod 777 /:*)",
      "Bash(sudo chown :* /:*)",
      "Bash(sudo deluser:*)",
      "Bash(sudo groupadd:*)",
      "Bash(sudo groupdel:*)",
      "Bash(sudo iptables --flush:*)",
      "Bash(sudo iptables -F:*)",
      "Bash(sudo passwd:*)",
      "Bash(sudo reboot:*)",
      "Bash(sudo rm -rf /)",
      "Bash(sudo rm -rf /:*)",
      "Bash(sudo rm -rf /etc/:*)",
      "Bash(sudo rm /bin/:*)",
      "Bash(sudo rm /etc/:*)",
      "Bash(sudo rm /usr/:*)",
      "Bash(sudo service iptables stop:*)",
      "Bash(sudo shutdown:*)",
      "Bash(sudo systemctl stop firewalld:*)",
      "Bash(sudo ufw disable:*)",
      "Bash(sudo useradd:*)",
      "Bash(sudo userdel:*)",
      "Bash(sudo usermod:*)",
      "Bash(sysctl -w :*)",
      "Bash(systemctl daemon-reload:*)",
      "Bash(systemctl disable :*)",
      "Bash(systemctl mask :*)",
      "Bash(truncate -s 0 /var/log/:*)",
      "Bash(wget :* | bash:*)",
      "Bash(wget :* | sh:*)",
      "Bash(wget :* | sudo :*)",
      "Bash(wget -qO- :* | sh:*)",
      "Bash(wget http://169.254.169.254/:*)"
    ]
  },
  "hooks": {},
  "feedbackSurveyState": {
    "lastShownTime": 1754054339526
  }
}
