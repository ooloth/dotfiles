# DOCS: https://sw.kovidgoyal.net/kitty/conf/

#############
# BEHAVIOUR #
#############

# Confirm before closing a window with 1+ processes running
confirm_os_window_close -1
scrollback_lines 100000

##############
# APPEARANCE #
##############

adjust_line_height 135%
cursor_text_color background
enabled_layouts grid,horizontal,stack

# Choose the nerd font ending with "Mono" to avoid large icon rendering issues
# see: https://github.com/kovidgoyal/kitty/issues/4427#issuecomment-1004934157
font_family UbuntuMono Nerd Font Mono
font_size 15.5
hide_window_decorations yes
macos_show_window_title_in window
placement_strategy bottom
window_padding_width 0 4 2 4

# Tab bar (see: https://sw.kovidgoyal.net/kitty/conf/#tab-bar)
tab_bar_min_tabs 2
tab_bar_edge bottom
tab_title_template " {title} "
tab_bar_style separator
tab_separator " "
active_tab_font_style bold

include colorscheme/catppuccin-mocha.conf

###################
# KEYMAPS (KITTY) #
###################

# see: https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.kitty_mod
kitty_mod cmd+shift

# see: https://sw.kovidgoyal.net/kitty/actions

# Reload config
map kitty_mod+r load_config_file

# OS windows
map kitty_mod+n new_os_window

# Create windows
map kitty_mod+\ new_window_with_cwd

# Navigate windows (i.e. splits/panes)
# NOTE: currently using vim-kitty-navigator for this (see below)
# map kitty_mod+h neighboring_window left
# map kitty_mod+l neighboring_window right
# map kitty_mod+j neighboring_window bottom
# map kitty_mod+k neighboring_window top

# Navigate tabs
map kitty_mod+[ previous_tab
map kitty_mod+] next_tab

# Resize windows
map kitty_mod+h resize_window narrower 3
map kitty_mod+l resize_window wider 3
map kitty_mod+k resize_window taller
map kitty_mod+j resize_window shorter

# increase/decrease font size
map kitty_mod+equal change_font_size all +2.0
map kitty_mod+minus change_font_size all -2.0

# toggle zoom current window
map kitty_mod+m toggle_layout stack

# use nvim as scrollback pager
# see: https://www.reddit.com/r/neovim/comments/qqf4nn/psa_you_can_use_neovim_as_the_kitty_terminal/

scrollback_pager nvim -u ~/.config/nvim-kitty-scrollback/init.lua -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "

# search scrollback in a pager (mapped to nvim above)
# see: https://sw.kovidgoyal.net/kitty/actions/#action-show_scrollback
map cmd+f show_scrollback
map cmd+o show_last_command_output

# Fuzzy search terminal output (including scrollback and current process output)
# see: https://github.com/kovidgoyal/kitty/issues/718#issuecomment-1188523518
# see: https://sw.kovidgoyal.net/kitty/kittens/clipboard/
# map kitty_mod+f launch --type=overlay --stdin-source=@screen_scrollback /bin/sh -c "/opt/homebrew/bin/fzf --no-sort --no-mouse --exact --tac | kitty +kitten clipboard"

# Hinting for text onscreen
# See: https://sw.kovidgoyal.net/kitty/conf/#select-and-act-on-visible-text
# See: https://sw.kovidgoyal.net/kitty/kittens/hints/#options
map kitty_mod+u open_url_with_hints
# map kitty_mod+p kitten hints --type path --program @
map kitty_mod+i kitten hints --type line --program @
map kitty_mod+w kitten hints --type word --program @
# map kitty_mod+h kitten hints --type hash --program @

##################
# KEYMAPS (TMUX) #
##################

# see: https://www.joshmedeski.com/posts/macos-keyboard-shortcuts-for-tmux/
# see: https://github.com/kovidgoyal/kitty/discussions/6538
# see: https://sw.kovidgoyal.net/kitty/conf/#shortcut-kitty.Send-arbitrary-text-on-key-presses

# NOTE: outside of tmux, use `kitten show_key` + tmux shortcut to get escape codes for tmux shortcut I want to trigger

# commands
map cmd+, send_text all \x01,

# SESSIONS

# select session or window (C-a + s/w)
map cmd+s send_text all \x01s
map cmd+w send_text all \x01w

# next/prev session
map cmd+] send_text all \x01)
map cmd+[ send_text all \x01(

# detach from session (C-a + d)
map cmd+d send_text all \x01d

# WINDOWS #

# create/close window: C-a + c/x)
map cmd+t send_text all \x01c
map cmd+x send_text all \x01x

# next/prev window (C-a + n/p)
map cmd+n send_text all \x01n
map cmd+p send_text all \x01p

# maximize window (C-a + z)
map cmd+m send_text all \x01z

# cmd+number = (switch to window: C-a + number)
map cmd+1 send_text all \x011
map cmd+2 send_text all \x012
map cmd+3 send_text all \x013
map cmd+4 send_text all \x014
map cmd+5 send_text all \x015
map cmd+6 send_text all \x016
map cmd+7 send_text all \x017
map cmd+8 send_text all \x018
map cmd+9 send_text all \x019

# rename window (C-a + r)
map cmd+r send_text all \x01r

# PANES #

# split pane (C-a + \/-)
map cmd+\ send_text all \x01\\
map cmd+- send_text all \x01-

####################
# KEYMAPS (NEOVIM) #
####################

# keymaps for neovim
# FIXME: these do not work in vim if inside tmux

# see: https://sw.kovidgoyal.net/kitty/keyboard-protocol/
# see: https://www.reddit.com/r/neovim/comments/12hyi9t/make_scr_cscr_stab_ctab_work_in_neovim_kitty/

# allow mapping <c-m> in neovim (without it being interpreted as <cr>)
# map ctrl+m send_text all \x1b[109;5u
# map enter send_text all \x1b[13u

# map ctrl+[ send_text all \x1b # <c-[>
# map ctrl+[ send_text all \x1b[91;5u

# see: https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
# map shift+enter              send_text all \x1b[13;2u      # <s-cr>
# map ctrl+enter               send_text all \x1b[13;5u      # <c-cr>
# map ctrl+shift+enter         send_text all \x1b[13;6u      # <c-s-cr>
# map shift+tab                send_text all \x1b[9;2u       # <s-tab>
# map ctrl+tab                 send_text all \x1b[9;5u       # <c-tab>
# map ctrl+shift+tab           send_text all \x1b[9;6u       # <c-s-tab>

# see: https://www.reddit.com/r/neovim/comments/mbj8m5/how_to_setup_ctrlshiftkey_mappings_in_neovim_and/
# map ctrl+shift+j             send_text all \x1b[74;5u      # <c-s-j> (not <c-J>, like <m-J> which works differently from <m-j>)
# map ctrl+shift+k             send_text all \x1b[75;5u      # <c-s-k>
# map ctrl+shift+h             send_text all \x1b[72;5u      # <c-s-h>
# map ctrl+shift+l             send_text all \x1b[76;5u      # <c-s-l>

#######################
# VIM-KITTY-NAVIGATOR #
#######################

# see: https://github.com/knubie/vim-kitty-navigator?tab=readme-ov-file#kitty

# allow_remote_control yes
# listen_on unix:/tmp/mykitty
#
# map ctrl+j kitten pass_keys.py bottom ctrl+j
# map ctrl+k kitten pass_keys.py top    ctrl+k
# map ctrl+h kitten pass_keys.py left   ctrl+h
# map ctrl+l kitten pass_keys.py right  ctrl+l
